{"version":3,"file":"static/js/289.67a2709e.chunk.js","mappings":"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","sources":["utils/dateUtils.js","hooks/useReportData.jsx","hooks/useIngresosRealtime.jsx","hooks/useEgresosRealtime.jsx","webpack://gestion_masajes.v2/./src/components/charts/Charts.module.css?fac0","components/charts/BarComparativo.jsx","components/charts/PieChart.jsx","webpack://gestion_masajes.v2/./src/pages/Graficos1/Graficos1.module.css?4767","pages/Graficos1/Graficos1.jsx","utils/listados.jsx"],"sourcesContent":["// src/utils/dateUtils.js\r\n\r\nimport {\r\n  parseISO,\r\n  isValid,\r\n  format,\r\n  formatDistanceToNow,\r\n  isSameDay,\r\n  isSameMonth,\r\n  subYears,\r\n  addDays as dfAddDays,\r\n  startOfWeek,\r\n  endOfWeek,\r\n  differenceInCalendarDays\r\n} from \"date-fns\";\r\nimport { es, enUS, ptBR } from \"date-fns/locale\";\r\nimport { Timestamp } from \"firebase/firestore\";\r\n\r\n/** Mapa de locales para date-fns */\r\nexport const localesMap = {\r\n  es,\r\n  en: enUS,\r\n  pt: ptBR\r\n};\r\n\r\n/**\r\n * Convierte un input (Date | ISO | string | number | Timestamp) en Date válido o devuelve null.\r\n */\r\nexport function toDate(input) {\r\n  if (!input) return null;\r\n\r\n  // 1) Firestore Timestamp\r\n  if (input instanceof Timestamp) {\r\n    const d = input.toDate();\r\n    return isValid(d) ? d : null;\r\n  }\r\n\r\n  // 2) Date nativo\r\n  if (input instanceof Date) {\r\n    return isValid(input) ? input : null;\r\n  }\r\n\r\n  // 3) ISO string\r\n  if (typeof input === \"string\") {\r\n    const d = parseISO(input);\r\n    return isValid(d) ? d : null;\r\n  }\r\n\r\n  // 4) número (timestamp ms)\r\n  const d = new Date(input);\r\n  return isValid(d) ? d : null;\r\n}\r\n\r\n/**\r\n * Formatea \"DD/MM/YYYY\". Devuelve \"--\" si inválida.\r\n */\r\nexport function formatDate(input) {\r\n  const d = toDate(input);\r\n  return d ? format(d, \"dd/MM/yyyy\") : \"--\";\r\n}\r\n\r\n/**\r\n * Formatea \"DD/MM/YYYY HH:mm\". Devuelve \"--\" si inválida.\r\n */\r\nexport function formatDateTime(input) {\r\n  const d = toDate(input);\r\n  return d ? format(d, \"dd/MM/yyyy HH:mm\") : \"--\";\r\n}\r\n\r\n/**\r\n * Suma (o resta si days < 0) días a una fecha. Retorna Date o null.\r\n */\r\nexport function addDays(input, days) {\r\n  const d = toDate(input);\r\n  return d ? dfAddDays(d, days) : null;\r\n}\r\n\r\n/**\r\n * Obtiene lunes y domingo de la semana de la fecha dada. { start: Monday, end: Sunday } o null.\r\n */\r\nexport function getWeekRange(input) {\r\n  const d = toDate(input);\r\n  if (!d) return null;\r\n  const start = startOfWeek(d, { weekStartsOn: 1 });\r\n  const end = endOfWeek(d, { weekStartsOn: 1 });\r\n  return { start, end };\r\n}\r\n\r\n/**\r\n * Diferencia entera de días entre dos fechas (a − b). Null si inválidas.\r\n */\r\nexport function diffDays(a, b) {\r\n  const da = toDate(a);\r\n  const db = toDate(b);\r\n  return da && db ? differenceInCalendarDays(da, db) : null;\r\n}\r\n\r\n/**\r\n * Convierte string ISO a Date. Null si inválido.\r\n */\r\nexport function parsearFechaISO(isoStr) {\r\n  try {\r\n    const d = parseISO(isoStr);\r\n    return isValid(d) ? d : null;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Formato corto \"dd/MM/yyyy\" con locale. Devuelve \"--\" si inválida.\r\n */\r\nexport function formatFechaCorta(input, idioma = \"es\") {\r\n  const d = toDate(input);\r\n  return d\r\n    ? format(d, \"dd/MM/yyyy\", { locale: localesMap[idioma] })\r\n    : \"--\";\r\n}\r\n\r\n/**\r\n * Formato largo (e.g. \"sábado, 28 de junio de 2025\") con locale. Devuelve \"--\" si inválida.\r\n */\r\nexport function formatFechaLarga(input, idioma = \"es\") {\r\n  const d = toDate(input);\r\n  return d ? format(d, \"PPPP\", { locale: localesMap[idioma] }) : \"--\";\r\n}\r\n\r\n/**\r\n * Compara si dos fechas son el mismo día (ignora hora).\r\n */\r\nexport function esMismoDia(a, b) {\r\n  const da = toDate(a);\r\n  const db = toDate(b);\r\n  return da && db && isSameDay(da, db);\r\n}\r\n\r\n/**\r\n * Compara si dos fechas están en el mismo mes y año.\r\n */\r\nexport function esMismoMes(a, b) {\r\n  const da = toDate(a);\r\n  const db = toDate(b);\r\n  return da && db && isSameMonth(da, db);\r\n}\r\n\r\n/**\r\n * Resta un año exacto a la fecha.\r\n */\r\nexport function unAnioAntes(input) {\r\n  const d = toDate(input);\r\n  return d ? subYears(d, 1) : null;\r\n}\r\n\r\n/**\r\n * Texto tipo \"hace 3 días\", \"en 2 meses\", etc., con locale. Devuelve \"--\" si inválida.\r\n */\r\nexport function desdeAhora(input, idioma = \"es\") {\r\n  const d = toDate(input);\r\n  return d\r\n    ? formatDistanceToNow(d, {\r\n        addSuffix: true,\r\n        locale: localesMap[idioma]\r\n      })\r\n    : \"--\";\r\n}","// src/hooks/useReportData.jsx\r\n\r\nimport { useMemo } from \"react\";\r\nimport { useIngresosRealtime } from \"./useIngresosRealtime\";\r\nimport { useEgresosRealtime }  from \"./useEgresosRealtime\";\r\nimport { toDate, esMismoDia, esMismoMes, addDays } from \"../utils/dateUtils\";\r\nimport {\r\n  tiposIngreso,\r\n  categoriasIngreso,\r\n  tiposEgreso,\r\n  categoriasEgreso\r\n} from \"../utils/listados\";\r\n\r\nexport function useReportData(params = {}) {\r\n  const { ingresos, loading: loadingI } = useIngresosRealtime();\r\n  const { egresos,  loading: loadingE } = useEgresosRealtime();\r\n  const loading = loadingI || loadingE;\r\n\r\n  return useMemo(() => {\r\n    // Determinar modo y rango\r\n    const hoy = new Date();\r\n    const firstOfMonth = new Date(hoy.getFullYear(), hoy.getMonth(), 1);\r\n\r\n    let mode = \"month\";              // mes en curso\r\n    let fecha, from, to;\r\n\r\n    if (params.fecha) {\r\n      mode = \"single\";\r\n      fecha = toDate(params.fecha);\r\n    } else if (params.from && params.to) {\r\n      mode = \"range\";\r\n      from = toDate(params.from);\r\n      to   = toDate(params.to);\r\n    }\r\n\r\n    // helper valor numérico\r\n    const getVal = it => Number(it.total ?? it.valor ?? 0);\r\n\r\n    // filtrar según modo\r\n    let filtI = ingresos;\r\n    let filtE = egresos;\r\n\r\n    if (mode === \"single\") {\r\n      filtI = ingresos.filter(i => esMismoDia(toDate(i.fecha), fecha));\r\n      filtE = egresos.filter(e => esMismoDia(toDate(e.fecha), fecha));\r\n      // rango de un día para byDate\r\n      from = fecha;\r\n      to   = fecha;\r\n    }\r\n    else if (mode === \"range\") {\r\n      filtI = ingresos.filter(i => {\r\n        const d = toDate(i.fecha);\r\n        return d && d >= from && d <= to;\r\n      });\r\n      filtE = egresos.filter(e => {\r\n        const d = toDate(e.fecha);\r\n        return d && d >= from && d <= to;\r\n      });\r\n    }\r\n    else { // month\r\n      filtI = ingresos.filter(i => esMismoMes(toDate(i.fecha), hoy));\r\n      filtE = egresos.filter(e => esMismoMes(toDate(e.fecha), hoy));\r\n      from = firstOfMonth;\r\n      to   = hoy;\r\n    }\r\n\r\n    // construir acumulado diario\r\n    const raw = {};\r\n    const addToRaw = (dObj, source) => {\r\n      const d = toDate(source.fecha);\r\n      const key = d.toISOString().slice(0,10);\r\n      raw[key] = raw[key] || { ingresos:0, egresos:0 };\r\n      raw[key][dObj] += getVal(source);\r\n    };\r\n    filtI.forEach(i => addToRaw(\"ingresos\", i));\r\n    filtE.forEach(e => addToRaw(\"egresos\", e));\r\n\r\n    const days = Object.entries(raw)\r\n      .map(([name, vals]) => ({ name, ...vals }))\r\n      .sort((a,b) => new Date(a.name) - new Date(b.name));\r\n\r\n    let cumI = 0, cumE = 0;\r\n    const byDate = days.map(({ name, ingresos, egresos }) => {\r\n      cumI += ingresos;\r\n      cumE += egresos;\r\n      return { name, ingresos: cumI, egresos: cumE };\r\n    });\r\n\r\n    // función para armar tortas\r\n    const mkPie = (arr, keys, field) =>\r\n      keys\r\n        .map(k => ({\r\n          name:  k,\r\n          value: arr\r\n            .filter(item => item[field] === k)\r\n            .reduce((s, it) => s + getVal(it), 0)\r\n        }))\r\n        .filter(x => x.value > 0);\r\n\r\n    const ingresosByTipo      = mkPie(filtI, tiposIngreso,      \"tipo\");\r\n    const ingresosByCategoria = mkPie(filtI, categoriasIngreso, \"categoria\");\r\n    const egresosByTipo       = mkPie(filtE, tiposEgreso,       \"tipo\");\r\n    const egresosByCategoria  = mkPie(filtE, categoriasEgreso,  \"categoria\");\r\n\r\n    return {\r\n      loading,\r\n      byDate,\r\n      ingresosByTipo,\r\n      ingresosByCategoria,\r\n      egresosByTipo,\r\n      egresosByCategoria\r\n    };\r\n  }, [ingresos, egresos, params.fecha, params.from, params.to, loading]);\r\n}","/* src/hooks/useIngresosRealtime.jsx\r\n * Descripción: Hook para obtener ingresos en tiempo real desde Firestore.\r\n * Permite leer los ingresos ordenados por fecha de forma reactiva.\r\n */\r\nimport { useState, useEffect } from \"react\";\r\nimport { collection, query, orderBy, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from \"../services/firebaseService\";\r\n\r\n/**\r\n * Solo lectura en tiempo real de \"ingresos\"\r\n */\r\nexport function useIngresosRealtime() {\r\n  const [ingresos, setIngresos] = useState([]);\r\n  const [loading, setLoading]   = useState(true);\r\n  const [error, setError]       = useState(null);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"ingresos\"), orderBy(\"fecha\", \"desc\"));\r\n    const unsub = onSnapshot(\r\n      q,\r\n      snap => {\r\n        setIngresos(snap.docs.map(d => ({ id: d.id, ...d.data() })));\r\n        setLoading(false);\r\n      },\r\n      err => {\r\n        console.error(\"Realtime error:\", err);\r\n        setError(err);\r\n        setLoading(false);\r\n      }\r\n    );\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  return { ingresos, loading, error };\r\n}\r\n","/* src/hooks/useEgresosRealtime.jsx\r\n * Descripción: Hook para obtener egresos en tiempo real desde Firestore.\r\n * Permite leer los egresos ordenados por fecha de forma reactiva.\r\n */\r\nimport { useState, useEffect } from \"react\";\r\nimport { collection, query, orderBy, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from \"../services/firebaseService\";\r\n\r\n/**\r\n * useEgresosRealtime\r\n * — Suscripción en tiempo real a la colección \"egresos\"\r\n * — Devuelve { egresos, loading, error }\r\n */\r\nexport function useEgresosRealtime() {\r\n  const [egresos, setEgresos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError]     = useState(null);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"egresos\"), orderBy(\"fecha\", \"desc\"));\r\n    const unsubscribe = onSnapshot(\r\n      q,\r\n      (snapshot) => {\r\n        setEgresos(snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\r\n        setLoading(false);\r\n      },\r\n      (err) => {\r\n        console.error(\"Realtime error (egresos):\", err);\r\n        setError(err);\r\n        setLoading(false);\r\n      }\r\n    );\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return { egresos, loading, error };\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"chartWrapper\":\"Charts_chartWrapper__pvGGc\",\"chartTitle\":\"Charts_chartTitle__ODGiq\",\"chart\":\"Charts_chart__9gQgT\",\"pieChart\":\"Charts_pieChart__r4+BY\"};","// src/components/charts/BarComparativo.jsx\r\n/*import React from \"react\";\r\nimport {\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\nimport { useIdioma } from \"../../context/IdiomaContext\";\r\n\r\nexport default function BarComparativo({ data }) {\r\n  const { t } = useIdioma();\r\n\r\n  // Solo mostramos la serie “Anterior” si hay dos puntos de datos\r\n  const showAnterior = data.length === 2;\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <BarChart data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip formatter={val => `$${val.toLocaleString()}`} />\r\n        <Legend />\r\n\r\n        {/* Serie “Actual” }\r\n        <Bar\r\n          dataKey=\"ingresos\"\r\n          name={t(\"Actual\")}\r\n          fill=\"#0088FE\"\r\n          barSize={30}\r\n        />\r\n\r\n        {/* Serie “Anterior” solo si corresponde }\r\n        {showAnterior && (\r\n          <Bar\r\n            dataKey=\"ingresosAnterior\"\r\n            name={t(\"Anterior\")}\r\n            fill=\"#00C49F\"\r\n            barSize={30}\r\n          />\r\n        )}\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}*/\r\n\r\n// src/components/charts/BarComparativo.jsx\r\nimport React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport styles from \"./Charts.module.css\";\r\n\r\n/**\r\n * Gráfico de barras comparativo de ingresos y egresos\r\n */\r\nexport default function BarComparativo({ data }) {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <BarChart data={data} className={styles.chart}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip formatter={value => new Intl.NumberFormat().format(value)} />\r\n        <Legend />\r\n        <Bar dataKey=\"ingresos\" fill=\"#82ca9d\" name=\"Ingresos\" />\r\n        <Bar dataKey=\"egresos\" fill=\"#8884d8\" name=\"Egresos\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}","// src/components/charts/PieChart.jsx\r\n/*import React from \"react\";\r\nimport {\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n  Tooltip,\r\n  Legend,\r\n  Cell\r\n} from \"recharts\";\r\n\r\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\nexport default function PieChartComponent({ title, data }) {\r\n  return (\r\n    <div style={{ width: \"100%\", height: 250 }}>\r\n      <h3 style={{ textAlign: \"center\" }}>{title}</h3>\r\n      <ResponsiveContainer>\r\n        <PieChart>\r\n          <Pie\r\n            data={data}\r\n            dataKey=\"valor\"\r\n            nameKey=\"nombre\"\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            outerRadius={80}\r\n            label\r\n          >\r\n            {data.map((_, idx) => (\r\n              <Cell key={idx} fill={COLORS[idx % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip />\r\n          <Legend verticalAlign=\"bottom\" height={36} />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}*/\r\n\r\n// src/components/charts/PieChart.jsx\r\nimport React from \"react\";\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport styles from \"./Charts.module.css\";\r\n\r\n/**\r\n * Componente de gráfico de torta para datos categorizados\r\n */\r\nexport default function PieChartComponent({ title, data }) {\r\n  const COLORES = [\r\n    \"#0088FE\",\r\n    \"#00C49F\",\r\n    \"#FFBB28\",\r\n    \"#FF8042\",\r\n    \"#A28EFF\",\r\n    \"#FF6E6E\"\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.pieChart} role=\"region\" aria-label={title}>\r\n      <h3>{title}</h3>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <PieChart>\r\n          <Pie\r\n            data={data}\r\n            dataKey=\"value\"\r\n            nameKey=\"name\"\r\n            innerRadius={50}\r\n            outerRadius={80}\r\n            label\r\n          >\r\n            {data.map((_, idx) => (\r\n              <Cell key={`cell-${idx}`} fill={COLORES[idx % COLORES.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip formatter={value => new Intl.NumberFormat().format(value)} />\r\n          <Legend layout=\"vertical\" align=\"right\" />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Graficos1_container__Kxclo\",\"title\":\"Graficos1_title__Uhjlg\",\"filterBox\":\"Graficos1_filterBox__mCEQO\",\"filterRow\":\"Graficos1_filterRow__bcy74\",\"filterFields\":\"Graficos1_filterFields__H1mQ8\",\"fieldPair\":\"Graficos1_fieldPair__SywNZ\",\"filterGroup\":\"Graficos1_filterGroup__MqEZp\",\"buttonGroup\":\"Graficos1_buttonGroup__izPrg\",\"filterButton\":\"Graficos1_filterButton__MrNf3\",\"cards\":\"Graficos1_cards__SN1Dx\",\"card\":\"Graficos1_card__hLErq\",\"valueWrapper\":\"Graficos1_valueWrapper__L9TfI\",\"green\":\"Graficos1_green__a3P20\",\"red\":\"Graficos1_red__2z34w\",\"arrow_green\":\"Graficos1_arrow_green__JB1vx\",\"arrow_red\":\"Graficos1_arrow_red__NdI-R\",\"barSection\":\"Graficos1_barSection__TACLf\",\"axisLabels\":\"Graficos1_axisLabels__WF3CE\",\"piesContainer\":\"Graficos1_piesContainer__9QVCX\",\"pieBlock\":\"Graficos1_pieBlock__uS5dt\",\"pieIngresos\":\"Graficos1_pieIngresos__wE57+\",\"pieEgresos\":\"Graficos1_pieEgresos__wf2nE\",\"pieWrapper\":\"Graficos1_pieWrapper__QpfiY\",\"toggleContainer\":\"Graficos1_toggleContainer__E4na5\",\"toggleButton\":\"Graficos1_toggleButton__gb6ih\",\"loading\":\"Graficos1_loading__d74dJ\"};","import React, { useState, useMemo } from \"react\";\r\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\r\nimport { useIdioma } from \"../../context/IdiomaContext\";\r\nimport { useReportData } from \"../../hooks/useReportData\";\r\nimport BarComparativo from \"../../components/charts/BarComparativo\";\r\nimport PieChartComponent from \"../../components/charts/PieChart\";\r\nimport styles from \"./Graficos1.module.css\";\r\n\r\n// formatea ISO → \"dd-mm-aaaa\"\r\nconst formatDDMMYYYY = iso => {\r\n  const d = new Date(iso);\r\n  const day   = String(d.getDate()).padStart(2, \"0\");\r\n  const month = String(d.getMonth() + 1).padStart(2, \"0\");\r\n  const year  = d.getFullYear();\r\n  return `${day}-${month}-${year}`;\r\n};\r\n\r\nexport default function Graficos1() {\r\n  const { t } = useIdioma();\r\n\r\n  // filtro\r\n  const [mode, setMode]     = useState(\"single\");\r\n  const [fecha, setFecha]   = useState(\"\");\r\n  const [desde, setDesde]   = useState(\"\");\r\n  const [hasta, setHasta]   = useState(\"\");\r\n  const [mes, setMes]       = useState(\"\");\r\n  const [anio, setAnio]     = useState(\"\");\r\n  const [params, setParams] = useState({});\r\n\r\n  const {\r\n    byDate,\r\n    ingresosByTipo,\r\n    egresosByTipo,\r\n    ingresosByCategoria,\r\n    egresosByCategoria,\r\n    loading\r\n  } = useReportData(params);\r\n\r\n  // totales/métricas\r\n  const totalI   = byDate.length ? byDate.at(-1).ingresos : 0;\r\n  const totalE   = byDate.length ? byDate.at(-1).egresos  : 0;\r\n  const utilidad = totalI - totalE;\r\n  const indice   = totalE > 0 ? utilidad / totalE : 0;\r\n  const margen   = totalI > 0 ? (utilidad / totalI) * 100 : 0;\r\n\r\n  // formateadores numéricos\r\n  const fmtCurr = v =>\r\n    new Intl.NumberFormat(\"es-AR\", { style: \"currency\", currency: \"ARS\" }).format(v);\r\n  const fmtIdx = v => v.toFixed(2);\r\n  const fmtPct = p =>\r\n    new Intl.NumberFormat(\"es-AR\", {\r\n      style: \"percent\",\r\n      minimumFractionDigits: 1\r\n    }).format(p / 100);\r\n\r\n  // tarjetas\r\n  const cards = useMemo(() => [\r\n    { label: t(\"total_ingresos\"),   value: totalI,   fmt: fmtCurr, color: \"green\" },\r\n    { label: t(\"total_egresos\"),    value: totalE,   fmt: fmtCurr, color: \"red\"   },\r\n    { label: t(\"utilidad\"),         value: utilidad, fmt: fmtCurr, color: utilidad >= 0 ? \"green\" : \"red\" },\r\n    { label: t(\"indice\"),           value: indice,   fmt: fmtIdx,  color: indice >= 1   ? \"green\" : \"red\" },\r\n    { label: t(\"margen_utilidad\"),  value: margen,   fmt: fmtPct,  color: margen >= 0   ? \"green\" : \"red\" }\r\n  ], [totalI, totalE, utilidad, indice, margen, t]);\r\n\r\n  // pies\r\n  const [groupBy, setGroupBy] = useState(\"categoria\");\r\n\r\n  // barData con fechas formateadas\r\n  const barData = useMemo(\r\n    () =>\r\n      byDate.map(d => ({\r\n        name: formatDDMMYYYY(d.name),\r\n        ingresos: d.ingresos,\r\n        egresos: d.egresos\r\n      })),\r\n    [byDate]\r\n  );\r\n\r\n  // años para mensual\r\n  const thisYear = new Date().getFullYear();\r\n  const years = Array.from({ length: 6 }, (_, i) => thisYear - i);\r\n\r\n  // apply / clear\r\n  const applyFilter = () => {\r\n    if (mode === \"single\" && fecha) {\r\n      setParams({ fecha });\r\n    } else if (mode === \"range\" && desde && hasta) {\r\n      setParams({ from: desde, to: hasta });\r\n    } else if (mode === \"mensual\" && mes && anio) {\r\n      const mm = mes.padStart(2, \"0\");\r\n      const from = `${anio}-${mm}-01`;\r\n      const to   = new Date(anio, +mes, 0).toISOString().slice(0,10);\r\n      setParams({ from, to });\r\n    } else {\r\n      setParams({});\r\n    }\r\n  };\r\n  const clearFilter = () => {\r\n    setFecha(\"\"); setDesde(\"\"); setHasta(\"\");\r\n    setMes(\"\"); setAnio(\"\");\r\n    setParams({});\r\n  };\r\n\r\n  if (loading) {\r\n    return <p className={styles.loading}>{t(\"cargando\")}…</p>;\r\n  }\r\n\r\n  const ingresosPie = groupBy === \"categoria\" ? ingresosByCategoria : ingresosByTipo;\r\n  const egresosPie  = groupBy === \"categoria\" ? egresosByCategoria  : egresosByTipo;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>{t(\"panel_financiero\")}</h2>\r\n\r\n      {/* FILTRO */}\r\n      <div className={styles.filterBox}>\r\n        <div className={styles.filterGroup}>\r\n          <label>{t(\"modo_de_filtro\")}</label>\r\n          <select value={mode} onChange={e => setMode(e.target.value)}>\r\n            <option value=\"single\">{t(\"una_sola_fecha\")}</option>\r\n            <option value=\"range\">{t(\"rango_de_fechas\")}</option>\r\n            <option value=\"mensual\">{t(\"mensual\")}</option>\r\n          </select>\r\n        </div>\r\n\r\n        {mode === \"single\" && (\r\n          <div className={styles.filterGroup}>\r\n            <label>{t(\"una_sola_fecha\")}</label>\r\n            <input\r\n              type=\"date\"\r\n              value={fecha}\r\n              onChange={e => setFecha(e.target.value)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {mode === \"range\" && (\r\n          <div className={styles.fieldPair}>\r\n            <div className={styles.filterGroup}>\r\n              <label>{t(\"desde\")}</label>\r\n              <input\r\n                type=\"date\"\r\n                value={desde}\r\n                onChange={e => setDesde(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.filterGroup}>\r\n              <label>{t(\"hasta\")}</label>\r\n              <input\r\n                type=\"date\"\r\n                value={hasta}\r\n                onChange={e => setHasta(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {mode === \"mensual\" && (\r\n          <div className={styles.fieldPair}>\r\n            <div className={styles.filterGroup}>\r\n              <label>{t(\"mes\")}</label>\r\n              <select value={mes} onChange={e => setMes(e.target.value)}>\r\n                <option value=\"\">—</option>\r\n                {Array.from({ length: 12 }, (_, i) => i + 1).map(m => (\r\n                  <option key={m} value={String(m).padStart(2,\"0\")}>\r\n                    {String(m).padStart(2,\"0\")}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className={styles.filterGroup}>\r\n              <label>{t(\"anio\")}</label>\r\n              <select value={anio} onChange={e => setAnio(e.target.value)}>\r\n                <option value=\"\">—</option>\r\n                {years.map(y => (\r\n                  <option key={y} value={y}>{y}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles.buttonGroup}>\r\n          <button onClick={applyFilter} className={styles.filterButton}>\r\n            {t(\"aplicar_filtro\")}\r\n          </button>\r\n          <button onClick={clearFilter} className={styles.filterButton}>\r\n            {t(\"borrar_filtro\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* TARJETAS */}\r\n      <div className={styles.cards}>\r\n        {cards.map((c,i) => {\r\n          const Arrow = c.color === \"green\" ? FaArrowUp : FaArrowDown;\r\n          return (\r\n            <div key={i} className={styles.card}>\r\n              <h3>{c.label}</h3>\r\n              <div className={styles.valueWrapper}>\r\n                <span className={styles[c.color]}>{c.fmt(c.value)}</span>\r\n                <Arrow className={styles[`arrow_${c.color}`]} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* BARRA ACUMULADA */}\r\n      <section className={styles.barSection}>\r\n        <h4>{t(\"ingresos_vs_egresos_acumulado\")}</h4>\r\n        <BarComparativo data={barData} />\r\n      </section>\r\n\r\n      {/* TOGGLE TORTAS */}\r\n      <div className={styles.toggleContainer}>\r\n        <button\r\n          onClick={() => setGroupBy(g => g === \"categoria\" ? \"tipo\" : \"categoria\")}\r\n          className={styles.toggleButton}\r\n        >\r\n          {groupBy === \"categoria\"\r\n            ? t(\"agrupado_por_tipo\")\r\n            : t(\"agrupado_por_categoria\")}\r\n        </button>\r\n      </div>\r\n\r\n      {/* TORTAS */}\r\n      <div className={styles.piesContainer}>\r\n        <div className={`${styles.pieBlock} ${styles.pieIngresos}`}>\r\n          <h5>\r\n            {t(\"ingresos_por\")}&nbsp;\r\n            {groupBy === \"categoria\" ? t(\"categoria\") : t(\"tipo\")}\r\n          </h5>\r\n          <div className={styles.pieWrapper}>\r\n            <PieChartComponent data={ingresosPie} />\r\n          </div>\r\n        </div>\r\n        <div className={`${styles.pieBlock} ${styles.pieEgresos}`}>\r\n          <h5>\r\n            {t(\"egresos_por\")}&nbsp;\r\n            {groupBy === \"categoria\" ? t(\"categoria\") : t(\"tipo\")}\r\n          </h5>\r\n          <div className={styles.pieWrapper}>\r\n            <PieChartComponent data={egresosPie} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","// src/utils/listado.jsx\r\n\r\nexport const tiposIngreso = [\r\n  \"INMUEBLE\",\r\n  \"VEHICULO\",\r\n  \"SUCURSALES\",\r\n  \"INVERSIONES\",\r\n  \"NORMA - MASAJES\",\r\n  \"OTROS\"\r\n];\r\nexport const inmuebles = [\r\n  \"DPTO CIUDAD DE LA PAZ\",\r\n  \"DPTO CORRIENTES\",\r\n  \"DPTO CONESA I\",\r\n  \"DPTO CONESA II\"\r\n];\r\nexport const sucursales = [\r\n  \"PRANA\",\r\n  \"EQUILIBRIO\",\r\n  \"FOUR SEASONS\",\r\n  \"MASAJES EN DOMICILIO\",\r\n  \"MASAJES A DOMICILIO\"\r\n];\r\nexport const mediosIngreso = [\r\n  \"EFECTIVO\",\r\n  \"CHEQUE\",\r\n  \"TARJETA DE CREDITO\",\r\n  \"TARJETA DE DEBITO\",\r\n  \"BILLETERA VIRTUAL\",\r\n  \"TRANSFERENCIA\",\r\n  \"ACREDITACION\",\r\n  \"OTROS\"\r\n];\r\nexport const categoriasIngreso = [\r\n  \"SERVICIO\",\r\n  \"ALQUILER\",\r\n  \"INVERSIONES\",\r\n  \"OTROS\"\r\n];\r\n\r\nexport const tiposEgreso = [\r\n  \"INMUEBLE\",\r\n  \"VEHICULO\",\r\n  \"SUCURSALES\",\r\n  \"JUBILACION\",\r\n  \"OTROS\"\r\n];\r\nexport const mediosEgreso = [\r\n  \"EFECTIVO\",\r\n  \"CHEQUE\",\r\n  \"TARJETA DE CREDITO\",\r\n  \"TARJETA DE DEBITO\",\r\n  \"BILLETERA VIRTUAL\",\r\n  \"TRANSFERENCIA\",\r\n  \"OTROS\"\r\n];\r\nexport const categoriasEgreso = [\r\n  \"SERVICIO\",\r\n  \"SUELDOS\",\r\n  \"PRODUCTOS DE LIMPIEZA\",\r\n  \"PRODUCTOS DE MASAJE\",\r\n  \"VEHÍCULO\",\r\n  \"SEGUROS\",\r\n  \"OTROS\"\r\n];"],"names":["enUS","ptBR","toDate","input","Timestamp","d","isValid","Date","parseISO","esMismoDia","a","b","da","db","isSameDay","esMismoMes","isSameMonth","useReportData","params","arguments","length","undefined","ingresos","loading","loadingI","setIngresos","useState","setLoading","error","setError","useEffect","q","query","collection","orderBy","unsub","onSnapshot","snap","docs","map","_objectSpread","id","data","err","console","useIngresosRealtime","egresos","loadingE","setEgresos","unsubscribe","snapshot","doc","useEgresosRealtime","useMemo","hoy","firstOfMonth","getFullYear","getMonth","fecha","from","to","mode","getVal","it","_ref","_it$total","Number","total","valor","filtI","filtE","filter","i","e","raw","addToRaw","dObj","source","key","toISOString","slice","forEach","days","Object","entries","_ref2","name","vals","sort","cumI","cumE","byDate","_ref3","mkPie","arr","keys","field","k","value","item","reduce","s","x","ingresosByTipo","tiposIngreso","ingresosByCategoria","categoriasIngreso","egresosByTipo","tiposEgreso","egresosByCategoria","categoriasEgreso","BarComparativo","_jsx","ResponsiveContainer","width","height","children","_jsxs","BarChart","className","styles","chart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","formatter","Intl","NumberFormat","format","Legend","Bar","fill","PieChartComponent","title","COLORES","pieChart","role","PieChart","Pie","nameKey","innerRadius","outerRadius","label","_","idx","Cell","concat","layout","align","formatDDMMYYYY","iso","day","String","getDate","padStart","month","year","Graficos1","t","useIdioma","setMode","setFecha","desde","setDesde","hasta","setHasta","mes","setMes","anio","setAnio","setParams","totalI","at","totalE","utilidad","indice","margen","fmtCurr","v","style","currency","fmtIdx","toFixed","fmtPct","p","minimumFractionDigits","cards","fmt","color","groupBy","setGroupBy","barData","thisYear","years","Array","ingresosPie","egresosPie","container","filterBox","filterGroup","onChange","target","type","fieldPair","m","y","buttonGroup","onClick","applyFilter","mm","filterButton","clearFilter","c","Arrow","FaArrowUp","FaArrowDown","card","valueWrapper","barSection","toggleContainer","g","toggleButton","piesContainer","pieBlock","pieIngresos","pieWrapper","pieEgresos","inmuebles","sucursales","mediosIngreso","mediosEgreso"],"sourceRoot":""}