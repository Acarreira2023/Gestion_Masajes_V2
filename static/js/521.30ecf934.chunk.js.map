{"version":3,"file":"static/js/521.30ecf934.chunk.js","mappings":"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","sources":["webpack://gestion_masajes.v2/./src/pages/Datos/Datos.module.css?59d2","pages/Datos/Datos.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Datos_container__HCjmf\",\"title\":\"Datos_title__RpB68\",\"filterBox\":\"Datos_filterBox__SBGV2\",\"filterGroup\":\"Datos_filterGroup__W-g0X\",\"fieldPair\":\"Datos_fieldPair__-GBRY\",\"buttonGroup\":\"Datos_buttonGroup__fujiR\",\"filterButton\":\"Datos_filterButton__b3A-g\",\"tableSection\":\"Datos_tableSection__dMacZ\",\"actions\":\"Datos_actions__CdWqL\",\"table\":\"Datos_table__j-lPJ\",\"deleteBtn\":\"Datos_deleteBtn__48RyQ\",\"status\":\"Datos_status__LDxif\"};","// src/pages/Datos/Datos.jsx\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useIdioma } from \"../../context/IdiomaContext\";\r\nimport { db } from \"../../services/firebaseService\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  getDocs,\r\n  deleteDoc,\r\n  doc\r\n} from \"firebase/firestore\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport styles from \"./Datos.module.css\";\r\n\r\nexport default function Datos() {\r\n  const { t } = useIdioma();\r\n\r\n  // filtros\r\n  const [mode, setMode]           = useState(\"single\");\r\n  const [fecha, setFecha]         = useState(\"\");\r\n  const [desde, setDesde]         = useState(\"\");\r\n  const [hasta, setHasta]         = useState(\"\");\r\n  const [mes, setMes]             = useState(\"\");\r\n  const [anio, setAnio]           = useState(\"\");\r\n  const [filterParams, setFilterParams] = useState({});\r\n\r\n  // tablas\r\n  const [ingresos, setIngresos] = useState([]);\r\n  const [egresos, setEgresos]   = useState([]);\r\n  const [selIn, setSelIn]       = useState(new Set());\r\n  const [selEg, setSelEg]       = useState(new Set());\r\n  const [loading, setLoading]   = useState(true);\r\n  const [error, setError]       = useState(null);\r\n\r\n  // años para mensual\r\n  const currentYear = new Date().getFullYear();\r\n  const years = Array.from({ length: 6 }, (_, i) => currentYear - i);\r\n\r\n  // recarga datos\r\n  useEffect(() => {\r\n    async function loadTables() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const endOf = date => {\r\n        const d = new Date(date);\r\n        d.setDate(d.getDate() + 1);\r\n        return d;\r\n      };\r\n\r\n      function buildQuery(colName) {\r\n        let q = collection(db, colName);\r\n        const { mode, fecha, desde, hasta, mes, anio } = filterParams;\r\n\r\n        if (mode === \"single\" && fecha) {\r\n          const d0 = new Date(fecha);\r\n          q = query(\r\n            q,\r\n            where(\"fecha\", \">=\", d0),\r\n            where(\"fecha\", \"<\", endOf(d0)),\r\n            orderBy(\"fecha\", \"desc\")\r\n          );\r\n        } else if (mode === \"range\" && desde && hasta) {\r\n          const d0 = new Date(desde), d1 = endOf(hasta);\r\n          q = query(\r\n            q,\r\n            where(\"fecha\", \">=\", d0),\r\n            where(\"fecha\", \"<\", d1),\r\n            orderBy(\"fecha\", \"desc\")\r\n          );\r\n        } else if (mode === \"mensual\" && mes && anio) {\r\n          const mm = mes.padStart(2, \"0\");\r\n          const start = new Date(`${anio}-${mm}-01`);\r\n          const end   = endOf(new Date(anio, +mes, 0));\r\n          q = query(\r\n            q,\r\n            where(\"fecha\", \">=\", start),\r\n            where(\"fecha\", \"<\", end),\r\n            orderBy(\"fecha\", \"desc\")\r\n          );\r\n        } else {\r\n          q = query(q, orderBy(\"fecha\", \"desc\"));\r\n        }\r\n        return q;\r\n      }\r\n\r\n      try {\r\n        const [snapIn, snapEg] = await Promise.all([\r\n          getDocs(buildQuery(\"ingresos\")),\r\n          getDocs(buildQuery(\"egresos\"))\r\n        ]);\r\n\r\n        const formatDoc = d => {\r\n          const data = d.data();\r\n          const ts   = data.fecha;\r\n          const date = ts?.toDate\r\n            ? ts.toDate()\r\n            : ts instanceof Date\r\n            ? ts\r\n            : ts?.seconds\r\n            ? new Date(ts.seconds * 1000)\r\n            : new Date(ts);\r\n          return {\r\n            id:        d.id,\r\n            fecha:     date.toLocaleDateString(),\r\n            categoria: data.categoria ?? data[\"categoría\"] ?? \"\",\r\n            tipo:      data.tipo ?? \"\",\r\n            proveedor: data.proveedor ?? data.provider ?? \"\",\r\n            total:     data.total ?? data.valor ?? 0\r\n          };\r\n        };\r\n\r\n        setIngresos(snapIn.docs.map(formatDoc));\r\n        setEgresos(snapEg.docs.map(formatDoc));\r\n        setSelIn(new Set());\r\n        setSelEg(new Set());\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    loadTables();\r\n  }, [filterParams]);\r\n\r\n  // aplicar/limpiar filtro\r\n  const applyFilter = () =>\r\n    setFilterParams({ mode, fecha, desde, hasta, mes, anio });\r\n\r\n  const clearFilter = () => {\r\n    setMode(\"single\");\r\n    setFecha(\"\"); setDesde(\"\"); setHasta(\"\");\r\n    setMes(\"\");  setAnio(\"\");\r\n    setFilterParams({});\r\n  };\r\n\r\n  // selección y borrado\r\n  const toggleSelect = (setFn, set, id) => {\r\n    const s = new Set(set);\r\n    s.has(id) ? s.delete(id) : s.add(id);\r\n    setFn(s);\r\n  };\r\n\r\n  const handleSelectAll = (items, setFn) => {\r\n    if (!items.length) return;\r\n    setFn(prev =>\r\n      prev.size === items.length\r\n        ? new Set()\r\n        : new Set(items.map(i => i.id))\r\n    );\r\n  };\r\n\r\n  const handleDeleteSelected = async (items, selSet, borrarFn, clearSel) => {\r\n    for (let id of selSet) await borrarFn(id);\r\n    clearSel(new Set());\r\n  };\r\n\r\n  const borrarIngreso = async id => {\r\n    await deleteDoc(doc(db, \"ingresos\", id));\r\n    setIngresos(prev => prev.filter(i => i.id !== id));\r\n    setSelIn(prev => { const s = new Set(prev); s.delete(id); return s; });\r\n  };\r\n\r\n  const borrarEgreso = async id => {\r\n    await deleteDoc(doc(db, \"egresos\", id));\r\n    setEgresos(prev => prev.filter(e => e.id !== id));\r\n    setSelEg(prev => { const s = new Set(prev); s.delete(id); return s; });\r\n  };\r\n\r\n  if (loading)\r\n    return <p className={styles.status}>{t(\"cargando_resumen\")}…</p>;\r\n  if (error)\r\n    return <p className={styles.status}>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>{t(\"datos\")}</h2>\r\n\r\n      {/* FILTRO */}\r\n      <div className={styles.filterBox}>\r\n        <div className={styles.filterGroup}>\r\n          <label>{t(\"modo_de_filtro\")}</label>\r\n          <select value={mode} onChange={e => setMode(e.target.value)}>\r\n            <option value=\"single\">{t(\"una_sola_fecha\")}</option>\r\n            <option value=\"range\">{t(\"rango_de_fechas\")}</option>\r\n            <option value=\"mensual\">{t(\"mensual\")}</option>\r\n          </select>\r\n        </div>\r\n\r\n        {mode === \"single\" && (\r\n          <div className={styles.filterGroup}>\r\n            <label>{t(\"una_sola_fecha\")}</label>\r\n            <input\r\n              type=\"date\"\r\n              value={fecha}\r\n              onChange={e => setFecha(e.target.value)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {mode === \"range\" && (\r\n          <div className={styles.fieldPair}>\r\n            <div className={styles.filterGroup}>\r\n              <label>{t(\"desde\")}</label>\r\n              <input\r\n                type=\"date\"\r\n                value={desde}\r\n                onChange={e => setDesde(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className={styles.filterGroup}>\r\n              <label>{t(\"hasta\")}</label>\r\n              <input\r\n                type=\"date\"\r\n                value={hasta}\r\n                onChange={e => setHasta(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {mode === \"mensual\" && (\r\n          <div className={styles.fieldPair}>\r\n            <div className={styles.filterGroup}>\r\n              <label>{t(\"mes\")}</label>\r\n              <select value={mes} onChange={e => setMes(e.target.value)}>\r\n                <option value=\"\">—</option>\r\n                {Array.from({ length: 12 }, (_, i) => i + 1).map(m => (\r\n                  <option key={m} value={String(m).padStart(2,\"0\")}>\r\n                    {String(m).padStart(2,\"0\")}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className={styles.filterGroup}>\r\n              <label>{t(\"anio\")}</label>\r\n              <select value={anio} onChange={e => setAnio(e.target.value)}>\r\n                <option value=\"\">—</option>\r\n                {years.map(y => (\r\n                  <option key={y} value={y}>{y}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className={styles.buttonGroup}>\r\n          <button onClick={applyFilter} className={styles.filterButton}>\r\n            {t(\"aplicar_filtro\")}\r\n          </button>\r\n          <button onClick={clearFilter} className={styles.filterButton}>\r\n            {t(\"borrar_filtro\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* INGRESOS */}\r\n      <section className={styles.tableSection}>\r\n        <h3>{t(\"ingresos\")}</h3>\r\n        {ingresos.length === 0 ? (\r\n          <p>No se encontraron ingresos.</p>\r\n        ) : (\r\n          <>\r\n            <div className={styles.actions}>\r\n              <button onClick={() => handleSelectAll(ingresos, setSelIn)}>\r\n                {t(\"seleccionar_todos\")}\r\n              </button>\r\n              <button\r\n                disabled={!selIn.size}\r\n                onClick={() =>\r\n                  handleDeleteSelected(ingresos, selIn, borrarIngreso, setSelIn)\r\n                }\r\n              >\r\n                {t(\"borrar_seleccionados\")}\r\n              </button>\r\n            </div>\r\n            <table className={styles.table}>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selIn.size === ingresos.length}\r\n                      onChange={() => handleSelectAll(ingresos, setSelIn)}\r\n                    />\r\n                  </th>\r\n                  <th>{t(\"fecha\")}</th>\r\n                  <th>{t(\"categoria\")}</th>\r\n                  <th>{t(\"tipo\")}</th>\r\n                  <th>{t(\"proveedor\")}</th>\r\n                  <th>{t(\"Total\")}</th>\r\n                  <th>{t(\"acciones\")}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {ingresos.map(row => (\r\n                  <tr key={row.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selIn.has(row.id)}\r\n                        onChange={() => toggleSelect(setSelIn, selIn, row.id)}\r\n                      />\r\n                    </td>\r\n                    <td>{row.fecha}</td>\r\n                    <td>{row.categoria}</td>\r\n                    <td>{row.tipo}</td>\r\n                    <td>{row.proveedor}</td>\r\n                    <td>${row.total}</td>\r\n                    <td>\r\n                      <button\r\n                        className={styles.deleteBtn}\r\n                        onClick={() => borrarIngreso(row.id)}\r\n                      >\r\n                        <FaTrash />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n      </section>\r\n\r\n      {/* EGRESOS */}\r\n      <section className={styles.tableSection}>\r\n        <h3>{t(\"egresos\")}</h3>\r\n        {egresos.length === 0 ? (\r\n          <p>No se encontraron egresos.</p>\r\n        ) : (\r\n          <>\r\n            <div className={styles.actions}>\r\n              <button onClick={() => handleSelectAll(egresos, setSelEg)}>\r\n                {t(\"seleccionar_todos\")}\r\n              </button>\r\n              <button\r\n                disabled={!selEg.size}\r\n                onClick={() =>\r\n                  handleDeleteSelected(egresos, selEg, borrarEgreso, setSelEg)\r\n                }\r\n              >\r\n                {t(\"borrar_seleccionados\")}\r\n              </button>\r\n            </div>\r\n            <table className={styles.table}>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selEg.size === egresos.length}\r\n                      onChange={() => handleSelectAll(egresos, setSelEg)}\r\n                    />\r\n                  </th>\r\n                  <th>{t(\"fecha\")}</th>\r\n                  <th>{t(\"categoria\")}</th>\r\n                  <th>{t(\"tipo\")}</th>\r\n                  <th>{t(\"proveedor\")}</th>\r\n                  <th>{t(\"Total\")}</th>\r\n                  <th>{t(\"acciones\")}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {egresos.map(row => (\r\n                  <tr key={row.id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selEg.has(row.id)}\r\n                        onChange={() => toggleSelect(setSelEg, selEg, row.id)}\r\n                      />\r\n                    </td>\r\n                    <td>{row.fecha}</td>\r\n                    <td>{row.categoria}</td>\r\n                    <td>{row.tipo}</td>\r\n                    <td>{row.proveedor}</td>\r\n                    <td>${row.total}</td>\r\n                    <td>\r\n                      <button\r\n                        className={styles.deleteBtn}\r\n                        onClick={() => borrarEgreso(row.id)}\r\n                      >\r\n                        <FaTrash />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}"],"names":["Datos","t","useIdioma","mode","setMode","useState","fecha","setFecha","desde","setDesde","hasta","setHasta","mes","setMes","anio","setAnio","filterParams","setFilterParams","ingresos","setIngresos","egresos","setEgresos","selIn","setSelIn","Set","selEg","setSelEg","loading","setLoading","error","setError","currentYear","Date","getFullYear","years","Array","from","length","_","i","useEffect","async","endOf","date","d","setDate","getDate","buildQuery","colName","q","collection","db","d0","query","where","orderBy","d1","mm","padStart","start","concat","end","snapIn","snapEg","Promise","all","getDocs","formatDoc","_ref","_data$categoria","_data$tipo","_ref2","_data$proveedor","_ref3","_data$total","data","ts","toDate","seconds","id","toLocaleDateString","categoria","tipo","proveedor","provider","total","valor","docs","map","err","console","message","loadTables","toggleSelect","setFn","set","s","has","delete","add","handleSelectAll","items","prev","size","handleDeleteSelected","selSet","borrarFn","clearSel","borrarIngreso","deleteDoc","doc","filter","borrarEgreso","e","_jsxs","className","styles","status","children","container","_jsx","title","filterBox","filterGroup","value","onChange","target","type","fieldPair","m","String","y","buttonGroup","onClick","applyFilter","filterButton","clearFilter","tableSection","_Fragment","actions","disabled","table","checked","row","deleteBtn","FaTrash"],"sourceRoot":""}