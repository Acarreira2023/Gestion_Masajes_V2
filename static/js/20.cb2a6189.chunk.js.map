{"version":3,"file":"static/js/20.cb2a6189.chunk.js","mappings":"6PACA,GAAgB,UAAY,yBAAyB,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,MAAQ,qBAAqB,MAAQ,qBAAqB,QAAU,uBAAuB,SAAW,wBAAwB,OAAS,uB,aCQlQ,SAASA,IACtB,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,OACZ,EAAEC,IAAMC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,OAEVC,EAAOC,IAAkBC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,IAClCK,EAAOC,IAAkBN,EAAAA,EAAAA,UAAS,OAClCO,EAASC,IAAgBR,EAAAA,EAAAA,WAAS,IAGzCS,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAQC,aAAaC,QAAQ,cAC/BF,IACFX,EAASW,GACTN,GAAY,KAEb,IA+BH,OACES,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EAAOC,UAClBC,MAAO,CAAEC,gBAAgB,OAADC,OAASC,EAAQ,MAAMC,UAE/CC,EAAAA,EAAAA,MAAA,QAAMR,UAAWC,EAAOQ,KAAMC,SAlCbC,UACnBC,EAAEC,iBACFrB,EAAS,MACTE,GAAW,GAEX,UACQhB,EAAMM,EAAOG,EAAUE,GAEzBA,EACFQ,aAAaiB,QAAQ,aAAc9B,GAEnCa,aAAakB,WAAW,cAE1BjC,EAAS,aACX,CAAE,MAAOkC,GACPxB,EAASwB,EAAIC,SAAWrC,EAAE,gBAAkB,6BAC9C,CAAC,QACCc,GAAW,EACb,GAgBuDa,SAAA,EACnDR,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAOiB,MAAMX,SAAE3B,EAAE,gBAE/BW,IAASQ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOV,MAAMgB,SAAEhB,KAEzCiB,EAAAA,EAAAA,MAAA,SAAOR,UAAWC,EAAOkB,MAAMZ,SAAA,CAC5B3B,EAAE,YACHmB,EAAAA,EAAAA,KAAA,SACEqB,KAAK,QACLC,MAAOrC,EACPsC,SAAWV,GAAM3B,EAAS2B,EAAEW,OAAOF,OACnCG,YAAY,kBACZC,UAAQ,EACRzB,UAAWC,EAAOyB,YAItBlB,EAAAA,EAAAA,MAAA,SAAOR,UAAWC,EAAOkB,MAAMZ,SAAA,CAC5B3B,EAAE,kBACHmB,EAAAA,EAAAA,KAAA,SACEqB,KAAK,WACLC,MAAOlC,EACPmC,SAAWV,GAAMxB,EAAYwB,EAAEW,OAAOF,OACtCI,UAAQ,EACRzB,UAAWC,EAAOyB,YAItB3B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAO0B,QAAQpB,UAC7BC,EAAAA,EAAAA,MAAA,SAAOR,UAAWC,EAAO2B,SAASrB,SAAA,EAChCR,EAAAA,EAAAA,KAAA,SACEqB,KAAK,WACLS,QAASxC,EACTiC,SA9CkBV,IAC5B,MAAMkB,EAAMlB,EAAEW,OAAOM,QACrBvC,EAAYwC,GACPA,GACHjC,aAAakB,WAAW,iBA4CjBnC,EAAE,wBAIPmB,EAAAA,EAAAA,KAAA,UACEqB,KAAK,SACLpB,UAAWC,EAAO8B,OAClBC,SAAUvC,EAAQc,SAEjBd,EAAO,GAAAY,OAAMzB,EAAE,YAAW,OAAQA,EAAE,kBAK/C,C","sources":["webpack://gestion_masajes.v2/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__yuWCw\",\"form\":\"Login_form__NzQ-7\",\"title\":\"Login_title__SM6UL\",\"error\":\"Login_error__2osl7\",\"label\":\"Login_label__i8ePL\",\"input\":\"Login_input__558N9\",\"options\":\"Login_options__as5P4\",\"checkbox\":\"Login_checkbox__sKCF3\",\"submit\":\"Login_submit__rSttc\"};","// src/pages/Login/Login.jsx\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useIdioma } from \"../../context/IdiomaContext\";\r\nimport fondoImg from \"../../assets/imagenes/Login-Spa.jpg\";\r\nimport styles from \"./Login.module.css\";\r\n\r\nexport default function Login() {\r\n  const { login } = useAuth();\r\n  const { t } = useIdioma();\r\n  const navigate = useNavigate();\r\n\r\n  const [email, setEmail]       = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [remember, setRemember] = useState(false);\r\n  const [error, setError]       = useState(null);\r\n  const [loading, setLoading]   = useState(false);\r\n\r\n  // al montar, cargamos el email guardado si existe\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem(\"savedEmail\");\r\n    if (saved) {\r\n      setEmail(saved);\r\n      setRemember(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setLoading(true);\r\n\r\n    try {\r\n      await login(email, password, remember);\r\n      // persistimos solo el email\r\n      if (remember) {\r\n        localStorage.setItem(\"savedEmail\", email);\r\n      } else {\r\n        localStorage.removeItem(\"savedEmail\");\r\n      }\r\n      navigate(\"/graficos1\");\r\n    } catch (err) {\r\n      setError(err.message || t(\"error_login\") || \"Error al iniciar sesión\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRememberChange = (e) => {\r\n    const chk = e.target.checked;\r\n    setRemember(chk);\r\n    if (!chk) {\r\n      localStorage.removeItem(\"savedEmail\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={styles.container}\r\n      style={{ backgroundImage: `url(${fondoImg})` }}\r\n    >\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h2 className={styles.title}>{t(\"Bienvenido\")}</h2>\r\n\r\n        {error && <div className={styles.error}>{error}</div>}\r\n\r\n        <label className={styles.label}>\r\n          {t(\"Usuario\")}\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"you@example.com\"\r\n            required\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          {t(\"Contraseña\")}\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n\r\n        <div className={styles.options}>\r\n          <label className={styles.checkbox}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={remember}\r\n              onChange={handleRememberChange}\r\n            />\r\n            {t(\"Recordar email\")}\r\n          </label>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className={styles.submit}\r\n          disabled={loading}\r\n        >\r\n          {loading ? `${t(\"Ingresar\")}...` : t(\"Ingresar\")}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":["Login","login","useAuth","t","useIdioma","navigate","useNavigate","email","setEmail","useState","password","setPassword","remember","setRemember","error","setError","loading","setLoading","useEffect","saved","localStorage","getItem","_jsx","className","styles","container","style","backgroundImage","concat","fondoImg","children","_jsxs","form","onSubmit","async","e","preventDefault","setItem","removeItem","err","message","title","label","type","value","onChange","target","placeholder","required","input","options","checkbox","checked","chk","submit","disabled"],"sourceRoot":""}